{"total":30,"pageSize":12,"pageCount":3,"data":[{"title":"性能优化常用方案","uid":"b9b334bea88dfba73a4e01092c68ab76","slug":"性能优化常用方案","date":"2022-05-13T07:21:05.000Z","updated":"2023-04-21T09:41:38.644Z","comments":true,"path":"api/articles/性能优化常用方案.json","cover":[],"text":"一、CDN1. CDN的概念CDN（Content Delivery Network，内容分发网络）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"面试题笔记——REACT篇(下)","uid":"b0c39a989b20ba4596f03e3c1987bd23","slug":"面试题笔记——REACT篇(下)","date":"2022-04-10T03:03:54.000Z","updated":"2023-04-21T09:35:58.057Z","comments":true,"path":"api/articles/面试题笔记——REACT篇(下).json","cover":[],"text":" 六、Redux1. 对 Redux 的理解，主要解决什么问题React是视图层框架。Redux是一个用来管理数据状态和UI状态的JavaScript应用工具。随着JavaScript单页应用（SPA）开发日趋复杂， JavaScript需要管理比任何时候都要多的state（状态...","link":"","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"48 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"面试题笔记——REACT篇(上)","uid":"0b7c0bb77310ab4c9c1a186c882be3d6","slug":"面试题笔记——REACT篇(上)","date":"2022-04-08T06:06:03.000Z","updated":"2023-04-21T09:34:53.508Z","comments":true,"path":"api/articles/面试题笔记——REACT篇(上).json","cover":[],"text":" 一、组件基础1. React 事件机制&lt;div onClick&#x3D;&#123;this.handleClick.bind(this)&#125;&gt;点我&lt;&#x2F;div&gt; 复制代码 React并不是将click事件绑定到了div的真实DOM上，...","link":"","photos":[],"count_time":{"symbolsCount":"61k","symbolsTime":"56 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"ahooks 整体架构源码解析","uid":"af425ac0390f0c4b127b06f565469692","slug":"ahooks 整体架构源码解析","date":"2022-01-13T14:06:14.000Z","updated":"2023-04-21T09:30:56.535Z","comments":true,"path":"api/articles/ahooks 整体架构源码解析.json","cover":[],"text":"React hooks utils 库自从 React 16.8 版本推出 React hooks，越来越多的项目使用 Function Component。React hooks utils 库随即诞生，它主要解决的两个问题如下： 公共逻辑的抽象。 解决 React hooks...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"如何优雅地在 React 中使用TypeScript","uid":"045012ff9de07809836ee76fe6879635","slug":"如何优雅地在 React 中使用TypeScript","date":"2021-12-18T13:48:34.000Z","updated":"2023-04-21T09:26:55.667Z","comments":true,"path":"api/articles/如何优雅地在 React 中使用TypeScript.json","cover":[],"text":"一、组件声明在React中，组件的声明方式有两种：函数组件和类组件， 来看看这两种类型的组件声明时是如何定义TS类型的。 1. 类组件类组件的定义形式有两种：React.Component&lt;P, S=&#123;&#125;&gt; 和 React.PureComponen...","link":"","photos":[],"count_time":{"symbolsCount":"48k","symbolsTime":"44 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码被revert,你pull了master,代码没了,咋找回来?","uid":"882b2e906d6e98c8bb89a8ff1e500dbe","slug":"代码被revert","date":"2021-11-21T13:36:54.000Z","updated":"2023-04-21T09:09:42.092Z","comments":true,"path":"api/articles/代码被revert.json","cover":[],"text":"问题场景实际工作中，在上线时，你的新功能代码都是在gitlab上提交merge to master的请求，拥有merge权限的领导通过后，你的代码才合到master。好，QA开始上线了你的代码，这时 啪，啪，报警了，代码有问题。领导revert了你的代码以保证master分支的正...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"分片加载超长列表渲染","uid":"22a53fdfd136fdbe0a4b16b8cca4b9ec","slug":"分片加载超长列表渲染","date":"2021-11-03T13:50:32.000Z","updated":"2023-04-21T09:05:05.486Z","comments":true,"path":"api/articles/分片加载超长列表渲染.json","cover":null,"text":"很早以前就有面试问超长列表如何优化，那时候觉得一般前端不会有这种功能，有也是分页，也就没有去关注。今天分享一个超长列表渲染的优化方法，分片加载，现在几乎也都不会用了，但是还是要知道这个东西。 先明确eventloop的机制，js是单线程的，当你第一个主线程执行过程中，遇到宏任务就...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Antv X6 绘制拖拽流程图","uid":"41fa294c894ff0de66f9b80c0c4a5c37","slug":"Antv X6 绘制拖拽流程图","date":"2021-10-20T09:21:06.000Z","updated":"2023-04-21T09:03:09.746Z","comments":true,"path":"api/articles/Antv X6 绘制拖拽流程图.json","cover":[],"text":"使用antv x6 绘制拖拽流程图安装# npm $ npm install @antv&#x2F;x6 --save # yarn $ yarn add @antv&#x2F;x6 复制代码 使用创建容器 &lt;!-- 画布 --&gt; &lt;div class&#x3D...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"React Hooks的学习笔记","uid":"15b860383ab68e267beb31ba2d0c1dea","slug":"React Hooks的学习笔记","date":"2021-09-15T12:50:54.000Z","updated":"2023-04-21T08:53:56.671Z","comments":true,"path":"api/articles/React Hooks的学习笔记.json","cover":null,"text":"Hooks的起步使用其实Hooks主要常用的可以有以下几个： useState useEffect useContext useMemo useRef useReducer useCallback 列举的以上这几个，其实已经算是比较常用的，尤其是前两个，接下来就会介绍它们部分几个...","link":"","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数组转树","uid":"d7aff688f09321eb25c6942e9ba97bfe","slug":"数组转树","date":"2021-09-02T13:54:10.000Z","updated":"2023-04-21T08:51:02.009Z","comments":true,"path":"api/articles/数组转树.json","cover":null,"text":"前端使用树插件是一个非常常见的使用场景。树插件的数据格式在我使用过的插件都是一样的。 而这个数据格式是由后端组装好返回给前端还是前端自己组装，这个问题在前端和后端也经常拿来撕逼。 大多数情况下后端会组装好，也有一部分前端自己处理，早之前我合作过的一个后端提出了一个观点， 浏览器是...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"可能是你需要的 React + TypeScript 50 条规范和经验","uid":"6bbcc54b583d8f9e999b08536b9ffec3","slug":"可能是你需要的 React + TypeScript 50 条规范和经验","date":"2021-08-08T05:24:16.000Z","updated":"2023-04-21T08:46:17.973Z","comments":true,"path":"api/articles/可能是你需要的 React + TypeScript 50 条规范和经验.json","cover":null,"text":"1. 注释(1) 文件顶部的注释，包括描述、作者、日期&#x2F;** * @description xxxxxx * @author chengfeng * @since 19&#x2F;05&#x2F;21 *&#x2F; 复制代码 (2) 模块的注释&#x2F;** * 拷...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"TypeScript，初次见面","uid":"1dcd3b31893419d8e8f3a54468e3f5d8","slug":"TypeScript，初次见面","date":"2021-08-03T11:45:38.000Z","updated":"2023-04-21T08:43:11.544Z","comments":true,"path":"api/articles/TypeScript，初次见面.json","cover":[],"text":"为什么用 TS ?说实话，最开始并没有想把 TS 用到实际项目中来，一来是感觉“类型”会限制 JS 的优势（好吧，就是浪写浪惯了）；二来听闻 TS + Redux 的酸爽滋味，有点望而却步；三来 TS 环境使用的库需要加类型的声明，很多库并不支持，有点担心推进的流畅度 … 这个时...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}