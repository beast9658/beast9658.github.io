{"title":"微前端实战篇","uid":"a110b92c4e47b4fc49cc33cb7f9c3765","slug":"微前端实战篇","date":"2022-09-15T15:16:31.000Z","updated":"2023-04-21T09:51:24.739Z","comments":true,"path":"api/articles/微前端实战篇.json","keywords":null,"cover":[],"content":"<h2 id=\"一-为什么需要微前端\"><a href=\"#一-为什么需要微前端\" class=\"headerlink\" title=\"一.为什么需要微前端?\"></a>一.为什么需要微前端?</h2><p>我们通过<code>3W</code>(what,why,how)的方式来讲解微前端</p>\n<h3 id=\"What-什么是微前端\"><a href=\"#What-什么是微前端\" class=\"headerlink\" title=\"What?什么是微前端?\"></a>What?什么是微前端?</h3><p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/670f3c4a9bbb4d30844d33c399693afa~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"01d6ac0fe1fd47d0aad1c2ce063c347b_tplv-k3u1fbpfcp-zoom-1.jpg\"></p>\n<p>微前端就是将不同的功能按照不同的维度拆分成多个子应用。通过主应用来加载这些子应用。</p>\n<p>微前端的核心在于<strong>拆</strong>, 拆完后在<strong>合</strong>!</p>\n<h3 id=\"Why-为什么去使用他\"><a href=\"#Why-为什么去使用他\" class=\"headerlink\" title=\"Why?为什么去使用他?\"></a>Why?为什么去使用他?</h3><ul>\n<li>不同团队间开发同一个应用技术栈不同怎么破？</li>\n<li>希望每个团队都可以独立开发，独立部署怎么破？</li>\n<li>项目中还需要老的应用代码怎么破？</li>\n</ul>\n<p>我们是不是可以将一个应用划分成若干个子应用，将子应用打包成一个个的lib。当路径切换时加载不同的子应用。这样每个子应用都是独立的，技术栈也不用做限制了！从而解决了前端协同开发问题</p>\n<h3 id=\"How-怎样落地微前端\"><a href=\"#How-怎样落地微前端\" class=\"headerlink\" title=\"How?怎样落地微前端?\"></a>How?怎样落地微前端?</h3><p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f816f2a2e5044be387603fe26c95fa08~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>2018年 Single-SPA诞生了， <code>single-spa</code>是一个用于前端微服务化的<code>JavaScript</code>前端解决方案 (本身没有处理样式隔离，<code>js</code>执行隔离) 实现了路由劫持和应用加载</p>\n<p>2019年 <code>qiankun</code>基于Single-SPA, 提供了更加开箱即用的 <code>API</code> （<code>single-spa</code> + <code>sandbox</code> + <code>import-html-entry</code>） 做到了，技术栈无关、并且接入简单（像<code>iframe</code>一样简单）</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>总结：子应用可以独立构建，运行时动态加载,主子应用完全解耦，技术栈无关，靠的是协议接入（子应用必须导出 bootstrap、mount、unmount方法）</p></blockquote>\n<p>这里先回答大家肯定会问的问题：</p>\n<p><strong>这不是<code>iframe</code>吗？</strong></p>\n<ul>\n<li>如果使用<code>iframe</code>，<code>iframe</code>中的子应用切换路由时用户刷新页面就尴尬了。</li>\n</ul>\n<p><strong>应用通信</strong>:</p>\n<ul>\n<li>基于URL来进行数据传递，但是传递消息能力弱</li>\n<li>基于<code>CustomEvent</code>实现通信</li>\n<li>基于props主子应用间通信</li>\n<li>使用全局变量、<code>Redux</code>进行通信</li>\n</ul>\n<p><strong>公共依赖</strong>:</p>\n<ul>\n<li><code>CDN</code> - externals</li>\n<li><code>webpack</code>联邦模块</li>\n</ul>\n<h2 id=\"二-SingleSpa实战\"><a href=\"#二-SingleSpa实战\" class=\"headerlink\" title=\"二 .SingleSpa实战\"></a>二 .<code>SingleSpa</code>实战</h2><h3 id=\"1-构建子应用\"><a href=\"#1-构建子应用\" class=\"headerlink\" title=\"1.构建子应用\"></a>1.构建子应用</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">vue create spa-vue\nnpm install single-spa-vue\n复制代码</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import singleSpaVue from &#39;single-spa-vue&#39;;\nconst appOptions &#x3D; &#123;\n   el: &#39;#vue&#39;,\n   router,\n   render: h &#x3D;&gt; h(App)\n&#125;\n&#x2F;&#x2F; 在非子应用中正常挂载应用\nif(!window.singleSpaNavigate)&#123;\n delete appOptions.el;\n new Vue(appOptions).$mount(&#39;#app&#39;);\n&#125;\nconst vueLifeCycle &#x3D; singleSpaVue(&#123;\n   Vue,\n   appOptions\n&#125;);\n&#x2F;&#x2F; 子应用必须导出 以下生命周期 bootstrap、mount、unmount\nexport const bootstrap &#x3D; vueLifeCycle.bootstrap;\nexport const mount &#x3D; vueLifeCycle.mount;\nexport const unmount &#x3D; vueLifeCycle.unmount;\nexport default vueLifeCycle;\n复制代码</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const router &#x3D; new VueRouter(&#123;\n  mode: &#39;history&#39;,\n  base: &#39;&#x2F;vue&#39;,\n  routes\n&#125;)\n复制代码</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>配置子路由基础路径</p></blockquote>\n<h3 id=\"2-配置库打包\"><a href=\"#2-配置库打包\" class=\"headerlink\" title=\"2.配置库打包\"></a>2.配置库打包</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">module.exports &#x3D; &#123;\n    configureWebpack: &#123;\n        output: &#123;\n            library: &#39;singleVue&#39;,\n            libraryTarget: &#39;umd&#39;\n        &#125;,\n        devServer:&#123;\n            port:10000\n        &#125;\n    &#125;\n&#125;\n复制代码</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>将子模块打包成类库</p></blockquote>\n<h3 id=\"3-主应用搭建\"><a href=\"#3-主应用搭建\" class=\"headerlink\" title=\"3.主应用搭建\"></a>3.主应用搭建</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div id&#x3D;&quot;nav&quot;&gt;\n    &lt;router-link to&#x3D;&quot;&#x2F;vue&quot;&gt;vue项目&lt;&#x2F;router-link&gt; \n    &lt;div id&#x3D;&quot;vue&quot;&gt;&lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;\n复制代码</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>将子应用挂载到<code>id=&quot;vue&quot;</code>标签中</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import Vue from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\nimport router from &#39;.&#x2F;router&#39;\nimport ElementUI from &#39;element-ui&#39;;\nimport &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;;\nVue.use(ElementUI);\nconst loadScript &#x3D; async (url)&#x3D;&gt; &#123;\n  await new Promise((resolve,reject)&#x3D;&gt;&#123;\n    const script &#x3D; document.createElement(&#39;script&#39;);\n    script.src &#x3D; url;\n    script.onload &#x3D; resolve;\n    script.onerror &#x3D; reject;\n    document.head.appendChild(script)\n  &#125;);\n&#125;\nimport &#123; registerApplication, start &#125; from &#39;single-spa&#39;;\nregisterApplication(\n    &#39;singleVue&#39;,\n    async ()&#x3D;&gt;&#123;\n        await loadScript(&#39;http:&#x2F;&#x2F;localhost:10000&#x2F;js&#x2F;chunk-vendors.js&#39;);\n        await loadScript(&#39;http:&#x2F;&#x2F;localhost:10000&#x2F;js&#x2F;app.js&#39;);\n        return window.singleVue\n    &#125;,\n    location &#x3D;&gt; location.pathname.startsWith(&#39;&#x2F;vue&#39;)\n)\nstart();\nnew Vue(&#123;\n  router,\n  render: h &#x3D;&gt; h(App)\n&#125;).$mount(&#39;#app&#39;)\n复制代码</code></pre>\n\n<h3 id=\"4-动态设置子应用publicPath\"><a href=\"#4-动态设置子应用publicPath\" class=\"headerlink\" title=\"4.动态设置子应用publicPath\"></a>4.动态设置子应用<code>publicPath</code></h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">if(window.singleSpaNavigate)&#123;\n  __webpack_public_path__ &#x3D; &#39;http:&#x2F;&#x2F;localhost:10000&#x2F;&#39;\n&#125;\n复制代码</code></pre>\n\n<h2 id=\"三-qiankun实战\"><a href=\"#三-qiankun实战\" class=\"headerlink\" title=\"三.qiankun实战\"></a>三.<code>qiankun</code>实战</h2><h3 id=\"1-主应用编写\"><a href=\"#1-主应用编写\" class=\"headerlink\" title=\"1.主应用编写\"></a>1.主应用编写</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;el-menu :router&#x3D;&quot;true&quot; mode&#x3D;&quot;horizontal&quot;&gt;\n    &lt;el-menu-item index&#x3D;&quot;&#x2F;&quot;&gt;首页&lt;&#x2F;el-menu-item&gt;\n    &lt;el-menu-item index&#x3D;&quot;&#x2F;vue&quot;&gt;vue应用&lt;&#x2F;el-menu-item&gt;\n    &lt;el-menu-item index&#x3D;&quot;&#x2F;react&quot;&gt;react应用&lt;&#x2F;el-menu-item&gt;\n&lt;&#x2F;el-menu&gt;\n&lt;router-view v-show&#x3D;&quot;$route.name&quot;&gt;&lt;&#x2F;router-view&gt;\n&lt;div v-show&#x3D;&quot;!$route.name&quot; id&#x3D;&quot;vue&quot;&gt;&lt;&#x2F;div&gt;\n&lt;div v-show&#x3D;&quot;!$route.name&quot; id&#x3D;&quot;react&quot;&gt;&lt;&#x2F;div&gt;\n复制代码</code></pre>\n\n<h3 id=\"2-注册子应用\"><a href=\"#2-注册子应用\" class=\"headerlink\" title=\"2.注册子应用\"></a>2.注册子应用</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import &#123;registerMicroApps,start&#125; from &#39;qiankun&#39;\nconst apps &#x3D; [  &#123;    name:&#39;vueApp&#39;,    entry:&#39;&#x2F;&#x2F;localhost:10000&#39;,    container:&#39;#vue&#39;,    activeRule:&#39;&#x2F;vue&#39;  &#125;,  &#123;    name:&#39;reactApp&#39;,    entry:&#39;&#x2F;&#x2F;localhost:20000&#39;,    container:&#39;#react&#39;,    activeRule:&#39;&#x2F;react&#39;  &#125;]\nregisterMicroApps(apps);\nstart();\n复制代码</code></pre>\n\n<h3 id=\"3-子Vue应用\"><a href=\"#3-子Vue应用\" class=\"headerlink\" title=\"3.子Vue应用\"></a>3.子Vue应用</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">let instance &#x3D; null;\nfunction render()&#123;\n  instance &#x3D; new Vue(&#123;\n    router,\n    render: h &#x3D;&gt; h(App)\n  &#125;).$mount(&#39;#app&#39;)\n&#125;\nif(window.__POWERED_BY_QIANKUN__)&#123;\n  __webpack_public_path__ &#x3D; window.__INJECTED_PUBLIC_PATH_BY_QIANKUN__;\n&#125;\nif(!window.__POWERED_BY_QIANKUN__)&#123;render()&#125;\nexport async function bootstrap()&#123;&#125;\nexport async function mount(props)&#123;render();&#125;\nexport async function unmount()&#123;instance.$destroy();&#125;\n复制代码</code></pre>\n\n<p><strong>打包配置</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">module.exports &#x3D; &#123;\n    devServer:&#123;\n        port:10000,\n        headers:&#123;\n            &#39;Access-Control-Allow-Origin&#39;:&#39;*&#39;\n        &#125;\n    &#125;,\n    configureWebpack:&#123;\n        output:&#123;\n            library:&#39;vueApp&#39;,\n            libraryTarget:&#39;umd&#39;\n        &#125;\n    &#125;\n&#125;\n复制代码</code></pre>\n\n<h3 id=\"4-子React应用\"><a href=\"#4-子React应用\" class=\"headerlink\" title=\"4.子React应用\"></a>4.子React应用</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import React from &#39;react&#39;;\nimport ReactDOM from &#39;react-dom&#39;;\nimport &#39;.&#x2F;index.css&#39;;\nimport App from &#39;.&#x2F;App&#39;;\nfunction render() &#123;\n  ReactDOM.render(\n    &lt;React.StrictMode&gt;\n      &lt;App &#x2F;&gt;\n    &lt;&#x2F;React.StrictMode&gt;,\n    document.getElementById(&#39;root&#39;)\n  );\n&#125;\nif(!window.__POWERED_BY_QIANKUN__)&#123;\n  render()\n&#125;\nexport async function bootstrap() &#123;&#125;\nexport async function mount() &#123;render();&#125;\nexport async function unmount() &#123;\n  ReactDOM.unmountComponentAtNode(document.getElementById(&quot;root&quot;));\n&#125;\n复制代码</code></pre>\n\n<p><strong>重写<code>react</code>中的<code>webpack</code>配置文件 (<code>config-overrides.js</code>)</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yarn add react-app-rewired --save-dev\n复制代码</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">module.exports &#x3D; &#123;\n  webpack: (config) &#x3D;&gt; &#123;\n    config.output.library &#x3D; &#96;reactApp&#96;;\n    config.output.libraryTarget &#x3D; &quot;umd&quot;;\n    config.output.publicPath &#x3D; &#39;http:&#x2F;&#x2F;localhost:20000&#x2F;&#39;\n    return config\n  &#125;,\n  devServer: function (configFunction) &#123;\n    return function (proxy, allowedHost) &#123;\n      const config &#x3D; configFunction(proxy, allowedHost);\n      config.headers &#x3D; &#123;\n        &quot;Access-Control-Allow-Origin&quot;: &quot;*&quot;,\n      &#125;;\n      return config;\n    &#125;;\n  &#125;,\n&#125;;\n复制代码</code></pre>\n\n<p><strong>配置<code>.env</code>文件</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">PORT&#x3D;20000\nWDS_SOCKET_PORT&#x3D;20000\n复制代码</code></pre>\n\n<p><strong>React路由配置</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import &#123; BrowserRouter, Route, Link &#125; from &quot;react-router-dom&quot;\nconst BASE_NAME &#x3D; window.__POWERED_BY_QIANKUN__ ? &quot;&#x2F;react&quot; : &quot;&quot;;\nfunction App() &#123;\n  return (\n    &lt;BrowserRouter basename&#x3D;&#123;BASE_NAME&#125;&gt;\n      &lt;Link to&#x3D;&quot;&#x2F;&quot;&gt;首页&lt;&#x2F;Link&gt;\n      &lt;Link to&#x3D;&quot;&#x2F;about&quot;&gt;关于&lt;&#x2F;Link&gt;\n      &lt;Route path&#x3D;&quot;&#x2F;&quot; exact render&#x3D;&#123;() &#x3D;&gt; &lt;h1&gt;hello home&lt;&#x2F;h1&gt;&#125;&gt;&lt;&#x2F;Route&gt;\n      &lt;Route path&#x3D;&quot;&#x2F;about&quot; render&#x3D;&#123;() &#x3D;&gt; &lt;h1&gt;hello about&lt;&#x2F;h1&gt;&#125;&gt;&lt;&#x2F;Route&gt;\n    &lt;&#x2F;BrowserRouter&gt;\n  );\n&#125;\n复制代码</code></pre>\n\n<h2 id=\"四-CSS隔离方案\"><a href=\"#四-CSS隔离方案\" class=\"headerlink\" title=\"四.CSS隔离方案\"></a>四.<code>CSS</code>隔离方案</h2><p><strong>子应用之间样式隔离</strong>：</p>\n<ul>\n<li><code>Dynamic Stylesheet</code>动态样式表，当应用切换时移除老应用样式，添加新应用样式</li>\n</ul>\n<p><strong>主应用和子应用之间的样式隔离</strong>：</p>\n<ul>\n<li><code>BEM</code>(Block Element Modifier) 约定项目前缀</li>\n<li><code>CSS-Modules</code> 打包时生成不冲突的选择器名</li>\n<li><code>Shadow DOM</code> 真正意义上的隔离</li>\n<li><code>css-in-js</code></li>\n</ul>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8c1fd56ba0ca4b49a0ae6930886bacce~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let shadowDom &#x3D; shadow.attachShadow(&#123; mode: &#39;open&#39; &#125;);\nlet pElement &#x3D; document.createElement(&#39;p&#39;);\npElement.innerHTML &#x3D; &#39;hello world&#39;;\nlet styleElement &#x3D; document.createElement(&#39;style&#39;);\nstyleElement.textContent &#x3D; &#96;\n    p&#123;color:red&#125;\n&#96;\nshadowDom.appendChild(pElement);\nshadowDom.appendChild(styleElement)\n复制代码</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>shadow DOM 可以实现真正的隔离机制</p></blockquote>\n<h2 id=\"五-JS沙箱机制\"><a href=\"#五-JS沙箱机制\" class=\"headerlink\" title=\"五.JS沙箱机制\"></a>五.<code>JS</code>沙箱机制</h2><p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90be5b0dce154c73bb30eae184eb507b~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>当运行子应用时应该跑在内部沙箱环境中</p>\n<ul>\n<li>快照沙箱，在应用沙箱挂载或卸载时记录快照，在切换时依据快照恢复环境 (无法支持多实例)</li>\n<li>Proxy 代理沙箱,不影响全局环境</li>\n</ul>\n<h3 id=\"1-快照沙箱\"><a href=\"#1-快照沙箱\" class=\"headerlink\" title=\"1).快照沙箱\"></a>1).快照沙箱</h3><ul>\n<li>1.激活时将当前window属性进行快照处理</li>\n<li>2.失活时用快照中的内容和当前window属性比对</li>\n<li>3.如果属性发生变化保存到<code>modifyPropsMap</code>中，并用快照还原window属性</li>\n<li>4.在次激活时，再次进行快照，并用上次修改的结果还原window</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">class SnapshotSandbox &#123;\n    constructor() &#123;\n        this.proxy &#x3D; window; \n        this.modifyPropsMap &#x3D; &#123;&#125;; &#x2F;&#x2F; 修改了那些属性\n        this.active();\n    &#125;\n    active() &#123;\n        this.windowSnapshot &#x3D; &#123;&#125;; &#x2F;&#x2F; window对象的快照\n        for (const prop in window) &#123;\n            if (window.hasOwnProperty(prop)) &#123;\n                &#x2F;&#x2F; 将window上的属性进行拍照\n                this.windowSnapshot[prop] &#x3D; window[prop];\n            &#125;\n        &#125;\n        Object.keys(this.modifyPropsMap).forEach(p &#x3D;&gt; &#123;\n            window[p] &#x3D; this.modifyPropsMap[p];\n        &#125;);\n    &#125;\n    inactive() &#123;\n        for (const prop in window) &#123; &#x2F;&#x2F; diff 差异\n            if (window.hasOwnProperty(prop)) &#123;\n                &#x2F;&#x2F; 将上次拍照的结果和本次window属性做对比\n                if (window[prop] !&#x3D;&#x3D; this.windowSnapshot[prop]) &#123;\n                    &#x2F;&#x2F; 保存修改后的结果\n                    this.modifyPropsMap[prop] &#x3D; window[prop]; \n                    &#x2F;&#x2F; 还原window\n                    window[prop] &#x3D; this.windowSnapshot[prop]; \n                &#125;\n            &#125;\n        &#125;\n    &#125;\n&#125;\n复制代码</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let sandbox &#x3D; new SnapshotSandbox();\n((window) &#x3D;&gt; &#123;\n    window.a &#x3D; 1;\n    window.b &#x3D; 2;\n    window.c &#x3D; 3\n    console.log(a,b,c)\n    sandbox.inactive();\n    console.log(a,b,c)\n&#125;)(sandbox.proxy);\n复制代码</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>快照沙箱只能针对单实例应用场景,如果是多个实例同时挂载的情况则无法解决，只能通过proxy代理沙箱来实现</p></blockquote>\n<h3 id=\"2-Proxy-代理沙箱\"><a href=\"#2-Proxy-代理沙箱\" class=\"headerlink\" title=\"2.Proxy 代理沙箱\"></a>2.Proxy 代理沙箱</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">class ProxySandbox &#123;\n    constructor() &#123;\n        const rawWindow &#x3D; window;\n        const fakeWindow &#x3D; &#123;&#125;\n        const proxy &#x3D; new Proxy(fakeWindow, &#123;\n            set(target, p, value) &#123;\n                target[p] &#x3D; value;\n                return true\n            &#125;,\n            get(target, p) &#123;\n                return target[p] || rawWindow[p];\n            &#125;\n        &#125;);\n        this.proxy &#x3D; proxy\n    &#125;\n&#125;\nlet sandbox1 &#x3D; new ProxySandbox();\nlet sandbox2 &#x3D; new ProxySandbox();\nwindow.a &#x3D; 1;\n((window) &#x3D;&gt; &#123;\n    window.a &#x3D; &#39;hello&#39;;\n    console.log(window.a)\n&#125;)(sandbox1.proxy);\n((window) &#x3D;&gt; &#123;\n    window.a &#x3D; &#39;world&#39;;\n    console.log(window.a)\n&#125;)(sandbox2.proxy);\n复制代码</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>每个应用都创建一个proxy来代理window，好处是每个应用都是相对独立，不需要直接更改全局window属性！</p></blockquote>\n","text":"一.为什么需要微前端?我们通过3W(what,why,how)的方式来讲解微前端 What?什么是微前端? 微前端就是将不同的功能按照不同的维度拆分成多个子应用。通过主应用来加载这些子应用。 微前端的核心在于拆, 拆完后在合! Why?为什么去使用他? 不同团队间开发同一个应用技...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%BE%AE%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">一.为什么需要微前端?</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#What-%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">What?什么是微前端?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Why-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8E%BB%E4%BD%BF%E7%94%A8%E4%BB%96\"><span class=\"toc-text\">Why?为什么去使用他?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#How-%E6%80%8E%E6%A0%B7%E8%90%BD%E5%9C%B0%E5%BE%AE%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">How?怎样落地微前端?</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C-SingleSpa%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">二 .SingleSpa实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9E%84%E5%BB%BA%E5%AD%90%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">1.构建子应用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%85%8D%E7%BD%AE%E5%BA%93%E6%89%93%E5%8C%85\"><span class=\"toc-text\">2.配置库打包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%B8%BB%E5%BA%94%E7%94%A8%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">3.主应用搭建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E5%AD%90%E5%BA%94%E7%94%A8publicPath\"><span class=\"toc-text\">4.动态设置子应用publicPath</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89-qiankun%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">三.qiankun实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%BB%E5%BA%94%E7%94%A8%E7%BC%96%E5%86%99\"><span class=\"toc-text\">1.主应用编写</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%B3%A8%E5%86%8C%E5%AD%90%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">2.注册子应用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AD%90Vue%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">3.子Vue应用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%AD%90React%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">4.子React应用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B-CSS%E9%9A%94%E7%A6%BB%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">四.CSS隔离方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94-JS%E6%B2%99%E7%AE%B1%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">五.JS沙箱机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%BF%AB%E7%85%A7%E6%B2%99%E7%AE%B1\"><span class=\"toc-text\">1).快照沙箱</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Proxy-%E4%BB%A3%E7%90%86%E6%B2%99%E7%AE%B1\"><span class=\"toc-text\">2.Proxy 代理沙箱</span></a></li></ol></li></ol>","author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"记录微前端micro-app的配置","uid":"b027df790b988095e3311de9321e5959","slug":"记录微前端micro-app的配置","date":"2022-09-23T14:31:25.000Z","updated":"2023-04-21T09:53:33.226Z","comments":true,"path":"api/articles/记录微前端micro-app的配置.json","keywords":null,"cover":null,"text":"介绍：基座应用react 文章发布时，涉及到的依赖包版本： &#123; &quot;@micro-zoe&#x2F;micro-app&quot;: &quot;^0.8.4&quot;, &#125; 复制代码 文章默认您已经大致浏览过micro-app官方文档，所以最好请先...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MJML邮件模版实战","uid":"d15af8effdd73a8b6f9c6e84242a848d","slug":"MJML邮件模版实战","date":"2022-09-07T14:13:14.000Z","updated":"2023-04-21T09:46:29.872Z","comments":true,"path":"api/articles/MJML邮件模版实战.json","keywords":null,"cover":[],"text":" 前言最近画个邮件模版使用table布局一言难尽，还要兼容各种邮件厂商，最后找了一个邮件模版来处理。 MJMLMJML是一种标记语言，旨在减少编写响应电子邮件的痛苦。它的语义语法使它简单明了，它丰富的标准组件库加快了您的开发时间，并减轻了您的电子邮件代码库。MJML的开源引擎生成...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[],"tags":[],"author":{"name":"Beastrong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}